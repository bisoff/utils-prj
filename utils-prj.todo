	☐	uj - pst* - добавить вывод ветки
	☐	uj - save & test alias timestamp
	☐	uj - pst tel
			Project file '/Users/a.bysov/.utils-prj/iMac-admin-4.local/tel' not found !
	☐	uj - pstl - align headers

	☐	если есть diff и local <> remote - Написать красным -> NEEDS COMMIT

	gsed - add alias if linux/mingw
	
	☐	utils-prj: pmove (поменять путь если имя указано и найдено но пути отличаются)
	☐	utils_prj: remote - from rebase to merge 
	☐	utils-prj: git remote | xargs -L1 git PULL --all --quiet -u ??
	☐	[<list>/]<prj>
	☐	pgo - если алиас не найден то поискать в общем списке
	☐	plist - -all - показать алиасы по всем группам
	repo p-help readme cli-params aliases-from-lib   pcmd 'gac'
	psave p1,p2,p3
	psave show gis before
	pget - show updated/deleted files in commits from local last to remote
	prj type - repo  folder  .. ??
	addr - list/prj
	padd:  text  sem  kesm  vas  misot
	pfix (add & commit)
	pstatx <prj>
	plist-sw
	padd:  scrum 2 prj2

	func 4 extract param
	-> param name
	<- param value (scalar or array)
	func - get_param_type scalar or array

	read params - sed -> func
	wrapper - test command exists - [ `type -t $1`"" == 'function' ]
	wrapper 
	1st - test cmd
	next - if defaults -> use
	next - parse object object 
		4rd detect msg|cmd
	pfix1 obj -> cmd_project_action fix default[.] - cmd_project_action fix obj - ok
	pfix1 msg -> cmd_project_action fix default[.] - cmd_project_action fix msg - ok?
	cmd => signature[ cmd obj msg] ? 
	cmd
	in each command test obj type?
	if param like 'default={val1:val2}' then if next params is missed or '-' means use default values (here: val1, val2)

	unite - pren w/ move
	unite - plist w/ pset

	empty params -> help
	plist add help header
	get_find_path
	local looped and other
	избавиться от APPS_ROOT (проставлять при setup)
	ругаться если dir:utils-prj not found || "$UTILS_PRJ_HOME/lib-prj" not found || "$HOME/.utils-prj/utils-prj-aliases" not found
	version
	pstatex - show all remotes/ all branches
	common func for error msg (red  !  func_name <norm>)
	pst -> psta[x]
	pstate -> pst[x]
	add to prj file - credential.helper line (ex =wincred,  =credential.helper osxkeychain, =gnome-keyring) and when pgo replace it in .git/config
	padd - deny if file exist
	когда статус - show branch/remote
	pst[x] если .|.. не передано -> проверять что передан list | prj  и prj совпадает с листом -> /<list> -> list
	может проще сделать внутри <prj> - <host1>=<path1>\n <host2>=<path2> или в имени?
	.gitignore в папку хоста чтобы не коммитить его в репо
	cmd_move_set() {		# psetmove	<host>
	add ppush? = pup
	<prj> [<list>] переделать  на [<list>/]<prj> 
	cmd wrapper - if lib timestamp changed (fix when lib load) then reload itself - тоже для aliases
	prj option - require MSG

	add binds  Ctrl+Shift ??
	detect project if home path is superfolde

	вынести add prj to set в func - проверять что его там нет 
	default переделать на $DEFAULT="~default"
	psaveall <list1>,<list2>
	instead get_curtent_set - add verify_set
	psave .. = psaveall
	psave ... = save all lits
	psave - log what committed

	plist pshow psets - use notice if no found
	add support comment for cfg (prj/list)
	add 'cfg' extension for prj/list files?
	dyna gif help w/ref impl for another my prj (eg. utils-vcs)
	cmd_project_delete +from_list
	psetren <not_current> <onother_name>

	keys(options)
	в wrapper --help -h -?  -verbose => local UTILS_PRJ_TRACE=1
	
	... - all sets
	 'set/prj' syntax

	support named params style: -v -h -n: -p: -l:(-s?) -m:"" 
	 -n=<prj> -p=<path> -t=<type> -r=<remote> -l(s?)=<list(set?)>

	prj - opt: switch to branch (ex v2.0)
	 todo: add matrix of using cmd_<utils-git>
	when cmd_<utils-git> absent - show not found msg and prompt how to install

	how add to repo 4 install by installer (brew apt-get)
	prj type: rsync  svn  simple(compare size / timestamp)

	add beta satus, version & lic info
	reference impl : clone setup psetadd cd padd plist cd- pgo touch pstate pstx pget psave psync pcmd (reset) ...
	how todo remote commit (w/o push)

	'alias log_print ' переименовать в cmd_utils.. 

	utils-prj-setup utils-prj-uninstall - заменит на cmd_utils..
	get_current_set  get_project_name get_project_path get_object_type get_sync_status - заменить на cmd_..
	везде в cmd_* добавить utils_prj

	добавить global default set file name (и заменить на -default)