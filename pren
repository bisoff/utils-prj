#!/bin/bash
# pren <prj> [<list>]  - rename prj name (alias) (find prj by curr_path)
# pren -n=<prj> -p=<path> -t=<type> -r=<remote> -s=<set>

trace=0
new_prj_name=$1
[[ "$new_prj_name" == "" ]] && echo -e "${red}[PROJECT RENAME] Project name not found !${norm}" && exit
#list=$2

#new_path=$(pwd) #; echo new_path: $new_path
curr_path="${PWD/#$HOME/~}" # replace $HOME to ~

# TODO: detect repo type (git/svn/hg - .git foder / .svn folder? / ..) and exit if new_path not a repo 

. lib-prj
home=$(home) ; [ $trace -eq 1 ] && echo home: $home
host=$(host) ; [ $trace -eq 1 ] && echo host: $host

if [[ "$list" == "" ]]; then
	prj_list=$(get_repos).list 
  else
  	prj_list="$list.list"
  fi
[ $trace -eq 1 ] && echo "prj_list: $prj_list"
# TODO: test prj in list
#exit
curr_path=`eval echo $curr_path` # replace '~'' -> $HOME

curr_prj_name=$(find_prj_by_path "$home/.cfg/$host" $curr_path $trace) ; [ $trace -eq 1 ] && echo curr_prj_name: $curr_prj_name	 #old prj name
[[ "$curr_prj_name" == "" ]] && echo -e "${red}[PROJECT RENAME] Project file not found !${norm}" && exit
  #prj_path=`sed -E -n 's/^path=([^#]+).*/\1/p' $home/.cfg/$host/$new_prj_name | tr -d '\r'` #; echo curr_path: $prj_path
#echo sed -i "s/^$curr_prj_name\$/$new_prj_name/g" "$home/.cfg/$host/$prj_list" ; exit
mv "$home/.cfg/$host/$curr_prj_name" "$home/.cfg/$host/$new_prj_name" || exit

sed -i -E "s/^$curr_prj_name\$/$new_prj_name/g" "$home/.cfg/$host/$prj_list" || exit # sed -i "s/^jr$/jrhw/g" `echo $home/.cfg/$host/$(get_repos).list`

#echo "path=$new_path" 	>  $prj_path
#echo "type=git" 	>> $prj_file
#echo "remote=" 		>> $prj_file

plist

# TODO: if file exists but absenr in default list then add

# shift loop
# if $new_prj_name == "" then folder
# if $path == "" then pwd
# if $type == "" then git
# if $remote == "" then current
# if $set == "" then default

